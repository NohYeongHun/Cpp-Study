#include <iostream>
using namespace std;

// 오늘의 주제 : 은닉성

// 객체지향 (OOP Object Oriented Programming)
// - 상속성
// - 은닉성
// - 다형성

// 은닉성 (Data Hiding) = 캡슐화(Encapsulation)
// 몰라도 되는 것은 깔끔하게 숨기겠다.
// - 1) 정말 위험하고 건드리면 안되는 경우
// - 2) 다른 경로로 접근하길 원하는 경우

// 자동차
// - 핸들
// - 페달
// - 엔진
// - 문
// - 각종 전기선

// 일반 구매자 입장에서 사용하는 것?
// - 핸들 / 페달 / 문
// 몰라도 됨 (오히려 건드리면 큰일남)
// - 엔진, 각종 전기선

// 접근 지정자 : public (공개적) protected (보호받는) private (사적인)
// - public : 누구한테나 공개
// - protected : 나의 자손들만 허락.
// - private : 나만 사용한다. << class Car 내부에서만.

class Car
{
public: //(멤버) 접근 지정자
	void MoveHandle() { }
	void PushPedal() { }
	void OpenDoor() { }

	void TurnKey()
	{
		// ...
		RunEngine();
	}

	// 사람들은 해당 로직을 실행을 제한적으로 해야하는지 알 수없음
	// 문법적으로 제약을 두어야 함.
private:
	void DisassembleCar() { } // 차를 분해한다.
	void ConnectCircuit() { } // 전기선 연결

protected:
	void RunEngine() { } // 엔진을 구동시킨다.

public:
	// 핸들
	// 페달
	// 엔진
	// 문
	// 각종 전기선

};

class SuperCar : private Car // 상속 접근 지정자
{
public:
	void PushRemoteController()
	{
		RunEngine();
	}
};


class TestSuperCar : public SuperCar
{

public:
	void Test()
	{
		// DisassembleCar(); 불가능
	}

};

// '캡슐화'
// 연관된 데이터와 함수를 논리적으로 묶어놓은 것

class Berserker
{
public:
	int GetHp() { return _hp; }
	void SetHp(int hp)
	{
		_hp = hp;
		if (_hp <= 50)
			SetBerserkerMode();
	}

private:
	// 사양 : 체력이 50 이하로 떨어지면 버서커 모드 발동 (강해짐)
	void SetBerserkerMode()
	{
		cout << "매우 강해짐!" << endl;
	}
public:
	int _hp = 100;

};

int main()
{
	Berserker b;
	b.SetHp(50);

	Car car;

	// 자동차 분해 => 
	// car.DisassembleCar(); 사용 불가
	// car.RunEngine(); 사용 불가

	SuperCar superCar;
	superCar.PushRemoteController();
	return 0;
}